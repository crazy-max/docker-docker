name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  BUILD_TAG: docker:test
  CONTAINER_NAME: docker

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_file:
          - Dockerfile-26.1
          - Dockerfile-26.0
          - Dockerfile-25.0
        context:
          - qemu
          - xx
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker Build
        uses: docker/bake-action@v4
        with:
          targets: image-local
        env:
          DEFAULT_TAG: ${{ env.BUILD_TAG }}
          DOCKERFILE: ${{ matrix.docker_file }}
      -
        name: Start
        run: |
          docker compose config
          docker compose up -d
          sleep 20
          docker ps -a
          netstat -atpn
          docker compose logs
        working-directory: test
        env:
          DOCKER_IMAGE: ${{ env.BUILD_TAG }}
          DOCKER_CONTAINER: ${{ env.CONTAINER_NAME }}
          CONTEXT_DIR: ${{ matrix.context }}
#      -
#        name: Check container logs
#        uses: crazy-max/.github/.github/actions/container-logs-check@main
#        with:
#          container_name: ${{ env.CONTAINER_NAME }}
#          log_check: "API listen on [::]:2375"
      -
        name: Create context
        run: |
          docker context create docker-test --docker "host=tcp://127.0.0.1:12375,skip-tls-verify=true"
          docker context use docker-test
      -
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: ./test/${{ matrix.context }}
      -
        name: Build within container
        run: |
          docker compose exec ${{ env.CONTAINER_NAME }} \
            docker build --platform linux/amd64,linux/arm64 --output type=cacheonly .
        working-directory: test
        env:
          DOCKER_IMAGE: ${{ env.BUILD_TAG }}
          DOCKER_CONTAINER: ${{ env.CONTAINER_NAME }}
          CONTEXT_DIR: ${{ matrix.context }}
      -
        name: Logs
        if: always()
        run: |
          docker compose logs
        working-directory: test
        env:
          DOCKER_IMAGE: ${{ env.BUILD_TAG }}
          DOCKER_CONTAINER: ${{ env.CONTAINER_NAME }}
          CONTEXT_DIR: ${{ matrix.context }}
